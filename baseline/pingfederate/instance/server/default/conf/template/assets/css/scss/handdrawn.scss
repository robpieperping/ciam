
$gray : #717171;
$lightgray: #919090;
// @import url(https://fonts.googleapis.com/css?family=Indie+Flower);
// @import url(https://fonts.googleapis.com/css?family=Covered+By+Your+Grace);
// @import url(https://fonts.googleapis.com/css?family=Shadows+Into+Light);
@import url(https://fonts.googleapis.com/css?family=Architects+Daughter);
body {
    // background: whitesmoke url(assets/backgrounds/paper_texture309.jpg);
    background: whitesmoke url(assets/backgrounds/paper_texture310.jpg);
    // background: whitesmoke url(assets/backgrounds/paper_texture318.jpg);
    // background: whitesmoke url(assets/backgrounds/paper_texture327.jpg);
    // background: whitesmoke url(assets/backgrounds/paper_texture332.jpg);
    font-family: 'Architects Daughter', cursive;
}

:focus {
    outline: none;
}

body,
input,
textarea,
keygen,
select,
button {
    // font-family: 'Indie Flower', cursive;
    font-family: 'Architects Daughter', cursive;
    /*     font-family: 'Shadows Into Light', cursive; */
    /*     font-family: 'Covered By Your Grace', cursive; */
    padding: .2rem .4rem;
}

input,
textarea,
keygen,
select,
button,
table,
.hd-border,
fieldset,
.checkbox > input[type="checkbox"] + label:before ,
.radio > input[type="radio"] + label:before
{
    background: transparent;
    align-self: center;
    outline: none;
    border: 2px solid $lightgray;
    // box-shadow: 20px 18px 24px -26px hsla(0, 0%, 0%, .2);
    border-radius: 255px 15px 225px 15px/15px 225px 15px 255px;
    /*
      Above is shorthand for:
      border-top-left-radius: 255px 15px;
      border-top-right-radius: 15px 225px;
      border-bottom-right-radius: 225px 15px;
      border-bottom-left-radius:15px 255px;
      */
    &.lined.thick {
        border: solid 7px #41403E;
    }
    &.dotted.thick {
        border: dotted 5px #41403E;
    }
    &.dashed.thick {
        border: dashed 5px #41403E;
    }
    &.lined.thin {
        border: solid 2px #41403E;
    }
    &.dotted.thin {
        border: dotted 2px #41403E;
    }
    &.dashed.thin {
        border: dashed 2px #41403E;
    }
}

body,
a,
input,
select,
button,
textarea {
    color: $gray;
}
/**/
input[type=button],
button {
    background: $lightgray;
    cursor:pointer;
    color: white;
}
/* Tables */
thead {
    tr th {
        border-bottom: 2px solid $lightgray;
        box-shadow: 20px 38px 34px -26px hsla(0, 0%, 0%, .2);
        border-radius: 0 0 225px 0/0 0 15px 0;
    }
}

tfoot {
    tr td {
        border-top: 2px solid $lightgray;
        box-shadow: 20px 38px 34px -26px hsla(0, 0%, 0%, .2);
        border-radius: 0 0 225px 0/0 0 15px 0;
        border-radius: 255px 0 0 0/15px 0 0 0;
    }
}

td,
th {
    padding: 0.4rem;
}

ul li {
    list-style: none;
    position: relative;
    &:before {
        font-family: icons;
        content: "\E02D";
        position:absolute;
        top: -0.4rem;
        left: -1.3rem;
        font-size: 0.7rem;
    }
}

/**
 * http://blog.felixhagspiel.de/index.php/posts/custom-inputs
 */

$color-default: $gray; // default color
$color-default-light: #DDDDDD; // default color light
$color-active: $gray; // color when active or checked
$color-active-light: #9EFFC4; // active color light
$color-focus: $gray; // color when focused
$margin-el: 7px; // default margin for our custom inputs

/**
 * Checkboxes & radios
 */
.checkbox, .radio {
    display: inline;
}
.checkbox > input[type="checkbox"],
.radio > input[type="radio"] {
    &:checked,
    &:not(:checked) {
        width: 0;
        height: 0;
        display: none;
        opacity: 0;
        & + label {
            display: inline-block;
            margin-right: $margin-el;
            margin-top: $margin-el;
            margin-bottom: $margin-el;
            padding-left: 22px;
            padding-top: 2px;
            position: relative;
            cursor: pointer;
            &:before {
                // position elements absolute to parent container
                position: absolute;
                display: inline-block;
                bottom: 1px;
                left: 0;
                width: 13px;
                height: 13px;
                border: 2px solid $color-default;
                color: $color-default;
            }
            &:hover:before {
                // add some hover styling
                // background-color: $color-default;
            }
        }
        &:focus + label:before {
            border-color: $color-focus;
            box-shadow: 0 0 6px 0 $color-focus;
        }
        &[disabled] + label {
            cursor: not-allowed;
            opacity: .4;
            &:before {
                opacity: .7;
            }
        }
    }
}

// styling for checkbox for both states
.checkbox > [type="checkbox"]:checked + label:before,
.checkbox > [type="checkbox"]:not(:checked) + label:before {
    // set icon font
    font-family: "icons";
    line-height: 0.3rem;
    font-size: 1rem;
    // add some CSS3-animations
    transition: border-color .2s ease-in, background-color .2s ease-in;
}

// styling for checkbox when selected
.checkbox > [type="checkbox"]:checked + label:before {
    // set checkmark icon
    content: "\E028";
    color: #FFF;
    // background-color: $color-active;
    border-color: $color-active;
}

// styling for checkbox when not selected
.checkbox > [type="checkbox"]:not(:checked) + label:before {
    // remove checkmark icon
    content: "";
}

// styling for radio for both states
.radio > [type="radio"]:checked + label:before,
.radio > [type="radio"]:not(:checked) + label:before,
{
    content: "";
    border-radius: 15px;
    // add some CSS3-animations
    transition: border-color .2s ease-in, box-shadow .1s ease-in, background-color .2s ease-in;
}

// styling for radio when selected
.radio > [type="radio"]:checked + label:before {
    color: $color-active;
    border-color: $color-active;
    background-color: $color-active;
    // use box-shadow to render circle
    box-shadow: inset 0 0 0 1px #fff;
}

// styling for radio when not selected
.radio > [type="radio"]:not(:checked) + label:before {
    box-shadow: inset 0 0 0 3px #fff;
}


/**
 * On/off switch
 */

.hd-switch {
    position: relative;
    display: inline;
}

.hd-switch > [type="checkbox"]:checked,
.hd-switch > [type="checkbox"]:not(:checked) {
    width: 0;
    height: 0;
    display: none;
    opacity: 0;
    & + label {
        cursor: pointer;
        display: inline-block;
        margin-right: $margin-el;
        margin-top: $margin-el;
        margin-bottom: $margin-el;
        // apply padding so the switch fits inside the label
        padding-right: 60px;
        &:after {
            content: "";
            top: 4px;
            right: 10px;
            width: 30px;
            height: 12px;
            // use absolute for better positioning
            position: absolute;
            border-radius: 30px;
        }
        & + .hd-switch-knob {
            top: 0;
            width: 20px;
            height: 20px;
            border-radius: 30px;
            display: inline-block;
            position: absolute;
            cursor: pointer;
            pointer-events: none;
            box-shadow: 1px 1px 1px $color-default-light;
            // add some CSS3-animations
            transition: right .1s ease-in, background-color .1s ease-in;
        }
    }
    &:focus + label:after,
    &:focus + label + .hd-switch-knob {
        box-shadow: 0 0 6px 0 $color-focus;
    }
    &[disabled] {
        & + label,
        & + label:after,
        & + label + .hd-switch-knob {
            cursor: not-allowed;
            opacity: 0.4;
        }
    }
}

.hd-switch > [type="checkbox"]:checked + label:after {
    background-color: $color-active-light;
}

.hd-switch > [type="checkbox"]:not(:checked) + label:after {
    background-color: $color-default-light;
}

.hd-switch > [type="checkbox"]:checked + label + .hd-switch-knob {
    right: 5px;
    background-color: $color-active;
}

.hd-switch > [type="checkbox"]:not(:checked) + label + .hd-switch-knob {
    right: 25px;
    background-color: $color-default;
}

@import 'icons';
